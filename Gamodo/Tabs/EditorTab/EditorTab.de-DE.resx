<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="tbHtmlTable.Text" xml:space="preserve">
    <value>Html Tabelle einfügen</value>
  </data>
  <data name="tbHtmlForm.Text" xml:space="preserve">
    <value>&lt;form&gt; Tag einfügen</value>
  </data>
  <data name="tbHtmlDiv.Text" xml:space="preserve">
    <value>Umschließen mit &lt;div&gt;</value>
  </data>
  <data name="tbHtmlSpan.Text" xml:space="preserve">
    <value>Umschließen mit &lt;span&gt;</value>
  </data>
  <data name="tbHtmlP.Text" xml:space="preserve">
    <value>Umschließen mit &lt;p&gt;</value>
  </data>
  <data name="tbHtmlH1.Text" xml:space="preserve">
    <value>Umschließen mit &lt;h1&gt;</value>
  </data>
  <data name="tbHtmlH2.Text" xml:space="preserve">
    <value>Umschließen mit &lt;h2&gt;</value>
  </data>
  <data name="tbHtmlH3.Text" xml:space="preserve">
    <value>Umschließen mit &lt;h3&gt;</value>
  </data>
  <data name="tbHtmlB.Text" xml:space="preserve">
    <value>Umschließen mit &lt;b&gt;</value>
  </data>
  <data name="tbHtmlI.Text" xml:space="preserve">
    <value>Umschließen mit &lt;i&gt;</value>
  </data>
  <data name="tbHtmlU.Text" xml:space="preserve">
    <value>Umschließen mit &lt;u&gt;</value>
  </data>
  <data name="tbHtmlLink.Text" xml:space="preserve">
    <value>Umschließen mit &lt;a&gt;</value>
  </data>
  <data name="tbHtmlImage.Text" xml:space="preserve">
    <value>Umschließen mit &lt;img&gt;</value>
  </data>
  <data name="tbHtmlBullet.Text" xml:space="preserve">
    <value>Umschließen mit &lt;ul&gt;</value>
  </data>
  <data name="tbHtmlOl.Text" xml:space="preserve">
    <value>Umschließen mit &lt;ol&gt;</value>
  </data>
  <data name="tbPHPComment.Text" xml:space="preserve">
    <value>Umschließen mit Kommentar</value>
  </data>
  <data name="tbPHPComment.ToolTipText" xml:space="preserve">
    <value>Umschließen mit Kommentar</value>
  </data>
  <data name="tbPHPFunction.Text" xml:space="preserve">
    <value>PHP Funktion einfügen</value>
  </data>
  <data name="tbPHPFunction.ToolTipText" xml:space="preserve">
    <value>PHP Funktion einfügen</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tbPHPClass.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAEUSURBVDhPY2AYBUSFQMHSF0p5K168y1/xKjR3+ctyEBsk
        BtccNe2hYNS0m6uipt36D8JBfTffAflpMAXZy56fyV725C4S/13WsuerkAy4eQamGZW+6ZK54JlxxqKn
        /9MXPpkJ05C+6OlukBhIjgFokwtCE8TWiCm3dodNunU3atrt0JR5D8pT5j38D6JhBqCIgRQhDHgoiB4o
        8TPvdsTPuvc/btY9uAEgNlwM1QW3Q6EumAkLh8ipt8pBFoBomOEwMXg4ARk4wuB2aOjE68ZhE6/9D+u/
        Cg8DEBskBrQEEhPosYBuY0DP5d1+XZfhsRDUe/kdECNigVBi8G6/pOTXdeqdX9f5UN/O8+UgNkiMkL4h
        Ig8Aj//o8HFXv4MAAAAASUVORK5CYII=
</value>
  </data>
  <data name="tbPHPClass.Text" xml:space="preserve">
    <value>Klasse einfügen</value>
  </data>
  <data name="tbPHPFor.Text" xml:space="preserve">
    <value>for Schleife einfügen</value>
  </data>
  <data name="tbPHPFor.ToolTipText" xml:space="preserve">
    <value>for Schleife einfügen</value>
  </data>
  <data name="tbPHPIf.Text" xml:space="preserve">
    <value>If Statement einfügen</value>
  </data>
  <data name="tbPHPIf.ToolTipText" xml:space="preserve">
    <value>If Statement einfügen</value>
  </data>
  <data name="tbPHPTry.Text" xml:space="preserve">
    <value>try...catch einfügen</value>
  </data>
  <data name="tbPHPSwitch.Text" xml:space="preserve">
    <value>switch Statement einfügen</value>
  </data>
  <data name="tbCSSColorPicker.Text" xml:space="preserve">
    <value>Wählen Sie eine Farbe mit ihrem Mauszeiger</value>
  </data>
  <data name="tbCSSColorChooser.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIwSURBVDhPnZJhSFNRGIZvhUwXtShU0KhQKMEIySCCQn8U
        IZYGZYMVRhCFCYGZFc1dNRqahZWJhBpFlrJgkqi7Ug4XUeAfszAy/6SziEASjMoZ8+k72yTIH9UOvJxz
        Lt/78H7fPdpq5+PniRd7Sagy/kvKk+g0pjR1aB76wq3BSZr+UapWeZRXW1XpoWNkmpT6YdY3DLPhL1I1
        qlZ5lFez6D34xmbIfTBOfpuffe1+8kV57RMh7f1DuXLPkbp+8Vh0ASwt7yHaZRavZraHARpW4ihmHXay
        OM91YkQrYGaNSHZ/NoxmwkgyDGshT6xdJbgwD7hDBpfJ4Ro27lGNAzd7YNYGU8XwoQQmDgkkC3rCAJNd
        hvgb4COdIQp4SikdOHmCh6sQqIPJFvh0CV4ege4MaIsAyhUg0sIivGQyII284SzvaeQdnQzCjz4x32Xu
        tR0GJEH/NnDHhBOUG2qI3aFLumOOgw1wpg3qDGjq/0nriznoG4Pe+wQe1fP9ts7X6mN8K9q+EJBSFSSv
        GY62fKaoSVK4R3HdCDJxBYI3W6FGZ7a2hOnawwLYHAY4VAJHeIjLToyQdryLHaUG+bXPKCv7SOMBeGUV
        7Z+G04VgLYBd2QR2py4EaGk1LN7ZTJLNxZZCLydNcCoevCuhcwm8XeuCrZsgOUn+eXiIcSqBpcIT7Tti
        eYUAEs499CmIamVeZjmb9W7iIoqVPVaevEmerkk35LsRMsdXdo1rslJFmVFq4y/T0ce3sVxwdAAAAABJ
        RU5ErkJggg==
</value>
  </data>
  <data name="tbCSSColorChooser.Text" xml:space="preserve">
    <value>Farben Dialog...</value>
  </data>
  <data name="tbJSComment.ToolTipText" xml:space="preserve">
    <value>Umschließen mit Kommentar</value>
  </data>
  <data name="tbJSFunction.ToolTipText" xml:space="preserve">
    <value>JS Funktion einfügen</value>
  </data>
  <data name="tbJSFor.Text" xml:space="preserve">
    <value>for Schleife einfügen</value>
  </data>
  <data name="tbJSFor.ToolTipText" xml:space="preserve">
    <value>for Schleife einfügen</value>
  </data>
  <data name="tbJSIf.Text" xml:space="preserve">
    <value>if Statement einfügen</value>
  </data>
  <data name="tbJSTry.Text" xml:space="preserve">
    <value>try...catch einfügen</value>
  </data>
  <data name="tbJSTry.ToolTipText" xml:space="preserve">
    <value>try...catch einfügen</value>
  </data>
  <data name="tbJSSwitch.Text" xml:space="preserve">
    <value>switch Statement einfügen</value>
  </data>
</root>